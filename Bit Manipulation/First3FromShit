//Number of 1 Bits  
int setBits(int N) {
        // Write Your Code here
        int cnt=0;
        while(N>0){
            if(N&1){
                cnt++;
            }
            N=N>>1;
        }
        return cnt;
    }
    
//Non Repeating Numbers

  vector<int> singleNumber(vector<int> nums) 
    {
        vector<int> a;
        int res=0;
        for(int i=0;i<nums.size();i++){
            res=res^nums[i];
        }
        int temp=res;
        int i=0;
        while(temp>0){
            if(temp&1){
                break;
            }
            i++;
            temp=temp>>1;
        }
        int mask=(1<<i);
        int FN=0;
        for(int i=0;i<nums.size();i++){
            if((mask&nums[i])!=0){
                FN=FN^nums[i];
            }
        }
        
        int Sn=0;
        Sn=res^FN;
        a.push_back(FN);
        a.push_back(Sn);
        sort(a.begin(),a.end());
        return a;
    }
//
//Bit Difference 
//
  int countBitsFlip(int a, int b){
        
        int c=a^b;
        int count=0;
        while(c>0){
            c=(c&(c-1));
            count++;
        }
        return count;
    }
